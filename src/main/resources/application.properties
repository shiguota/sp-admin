#server
server.port=8080
server.servlet.context-path=/sp
#spring AOP
spring.aop.auto=true
spring.aop.proxy-target-class=true
#shiro

#mysql
spring.datasource.url=jdbc:mysql://svn.evomedia.cn:3306/evo_sp_db?useSSL=false&useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=Evomedia-db
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#druid
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j2
spring.datasource.logSlowSql=true

#mybatis-plus
mybatis-plus.mapper-locations=classpath*:mapper/*.xml
#mybatis-plus.mapper-locations=classPath*:com/evo/sp/basis/mapper/**/*Mapper.xml
mybatis-plus.type-aliases-package=com.evo.sp.basis.entity
#log4j
logging.level.com.evo.sp=debug
#redis
spring.redis.host=127.0.0.1
spring.redis.port=6379






